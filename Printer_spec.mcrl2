%data
sort Error = struct temperatureError | doorError | filamentTypeError; 
sort buttons = struct startPrint | Reset | Unlock;
sort filamentType = struct PLA; %| ABS;
%sort printBedTemp = struct c60 | c80;
% map
map tempNozzle: filamentType -> Nat;
	tempPrintBed: filamentType -> Nat;
%variable
var idealNozzleTemp, idealPrintBedTemp:Nat;
	nozzleTemp, printBedTemp:Nat;



% equation
eqn tempNozzle(PLA) = 214;
	tempPrintBed(PLA) = 60;
	%idealNozzleTemp = 0;
	%idealPrintBedTemp = 0;
	%tempNozzle(ABS) = 260;
	%tempPrintBed(ABS) = 80;
	
% input actions
act buttonPress: buttons;
    setDimensions, returnTemperature, returnProperties: Nat # Nat;
	returnDoorStatus: Bool # Bool;

% output actions
act getTemperature, getDoorStatus;
	setDoor, returnResult: Bool;
	turnHeatingOn: Nat # Nat;
	move: Nat # Nat # Bool;
	returnError: Error;

% internal actions
act _heatingFinished: Bool;
 	_setTemperature: Nat # Nat;

% Main Controller
proc 
	startPrint = getFilamentType ;
	getFilamentType = setTemperature(tempNozzle(PLA), tempPrintBed(PLA));
% User Interface Controller

% Temperature Controller
proc
	setTemperature(nTemp:Nat, pbTemp:Nat) = _setTemperature(1,3);
	%heatNozzle(nTemp:Nat) = (nozzleTemp
	%heatPrintBed(pbTemp:Nat) = 


init startPrint;